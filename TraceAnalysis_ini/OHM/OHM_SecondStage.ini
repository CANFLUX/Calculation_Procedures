%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Second stage ini_file for OHM
%
% Sep, 2023 Copied from HOGG INI by Ted Scott
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Revisions:
%
% March 04, 2025 (Joyson)
%	- added Qualifier to PA and WS
%	- VPD calc calculation using vapPressMet instead of vappress 
%	  to make uniform with Young and Hogg
%
% Jan 22, 2025 (Paul)
%	- Removed badWD filter. Wind direction filtering now done in third stage.
%
% May 21, 2024 (Zoran)
%   - Replaced:
%		badWD = find(WD_1_1_1 >= lower | WD_1_1_1 <= upper);
%     with:
%   	badWD = (WD_1_1_1 >= lower | WD_1_1_1 <= upper);
%	  to avoid having a trace badWD that is not of a full length. 
%     The original line would return < 17,520 points.
% Oct 11, 2023 (Ted)
%	- Updated to remove YOUNG values as backups as OHM is not near YOUNG
%	- Removed all shiftMyData calls
%
% Oct 17, 2023 (Ted)
%	- added NEE following pattern in YOUNG/HOGG 2nd stages
%
% Jan 15, 2024 (Ted)
%	- add Evapotranspiration (ET) using LE and Latent_heat_vaporization biomet function
%
% Jan 18, 2024 (Ted)
%	- cleanup of lines using calc_avg_trace with single argument
%
% Jan 29, 2024 (Ted)
%	- create WD filter trace "badWD" to use for cleaning out fluxes when wind is disturbed by tower before sonic
%

Site_name = 'Oak Hammond Marsh'
SiteID = 'OHM'
input_path    = ''
output_path   = ''
high_level_path = {}
searchPath = 'auto'

% Contents:
% Misc. variables
% Profiles
% Radiation
% Soil
% Turbulent fluxes
% Carbon balance terms
% Energy storage terms


% ----------------------------------------------------------------------------
% GASES
% ----------------------------------------------------------------------------

[Trace]
	variableName = 'CO2'
	Evaluate = 'CO2 = CO2;'
	title = 'CO2 in mole fraction of wet air'
	units = 'µmol / mol wet air'
[End]

[Trace]
	variableName = 'CO2_SIGMA'
	Evaluate = 'CO2_SIGMA = sqrt(co2_var);'
	title = 'Standard deviation of velocity fluctuations'
	units = 'm s^{-1}'
[End]

[Trace]
	variableName = 'FC'
	Evaluate = 'FC = FC;'
	title = 'CO_2 Flux'
	units = 'µmol m^{-2} s^{-1}'
[End]

[Trace]
	variableName = 'SC'
	Evaluate = 'SC = SC;
				fill_w_zeros = isnan(SC) & ~isnan(FC);
				SC(fill_w_zeros) = 0;'
	title = 'Estimate of storage CO2 flux'
	units = 'µmol/m^2/s'
[End]

[Trace]
	variableName = 'H2O'
	Evaluate = 'H2O = H2O;'
	title = 'H2O in mole fraction of wet air'
	units = 'mmol / mol wet air'
[End]

[Trace]
	variableName = 'H2O_SIGMA'
	Evaluate = 'H2O_SIGMA = sqrt(h2o_var);'
	title = 'Standard deviation of velocity fluctuations'
	units = 'm s^{-1}'
[End]

[Trace]
	variableName = 'CH4'
	Evaluate = 'CH4 = CH4;'
	title = 'CH4 in mole fraction of wet air'
	units = 'nmol / mol wet air'
[End]

[Trace]
	variableName = 'FCH4'
	Evaluate = 'FCH4 = FCH4;'
	title = 'CH_4 Flux'
	units = 'nmol m^{-2} s^{-1}'
[End]

[Trace]
	variableName = 'SCH4'
	Evaluate = 'SCH4 = SCH4;'
	title = 'Estimate of storage CH4 flux'
	units = 'nmol m^{-2} s^{-1}'
[End]


% ----------------------------------------------------------------------------
% HEAT
% ----------------------------------------------------------------------------

[Trace]
	variableName = 'LE'
	Evaluate = 'LE = LE;'
	title = 'Latent Heat Flux'
	units = 'W m^{-2}'
[End]

[Trace]
	variableName = 'SLE'
	Evaluate = 'SLE = SLE;'
	title = 'Estimate of storage latent heat flux'
	units = 'W m^{-2}'
[End]

[Trace]
	variableName = 'H'
	Evaluate = 'H = H;'
	title = 'sensible heat flux'
	units = 'W m^{-2}'
[End]

[Trace]
	variableName = 'SH'
	Evaluate = 'SH = SH;'
	title = 'Estimate of storage sensible heat flux'
	units = 'W m^{-2}'
[End]


% ----------------------------------------------------------------------------
% MET_ATM
% ----------------------------------------------------------------------------

[Trace]
	variableName = 'PA_1_1_1' %added qualifier by Joyson
	Evaluate = 'PA = PA ./ 1000;
				PA_1_1_1 = calc_avg_trace(clean_tv,PA,PA_ECCC,-1);'
	title = 'Atmospheric Pressure'
	units = 'kPa' 
[End]

[Trace]
	variableName = 'RH_1_1_1'
	%Evaluate = 'RH_1_1_1 = calc_avg_trace(clean_tv,RH_1_1_2,RH_ECCC,0);'
	Evaluate = 'RH_1_1_1 = calc_avg_trace(clean_tv,RH_1_1_2,[RH_Stonewall,RH_ECCC],-1);
				RH_1_1_1(RH_1_1_1>100) = 100;
				RH_1_1_1(RH_1_1_1<0) = 0;'
	title = 'RH at 4m (HMP)'
	units = '%'
[End]

[Trace]
	variableName = 'T_SONIC'
	Evaluate = 'T_SONIC = T_SONIC;'
	title = 'Mean temperature of ambient air as measured by the anemometer'
	units = '°C'
[End]

[Trace]
	variableName = 'T_SONIC_SIGMA'
	Evaluate = 'T_SONIC_SIGMA = sqrt(ts_var);'
	title = 'Standard deviation of sonic temperature'
	units = '°C'
[End]

[Trace]
	variableName = 'TA_1_1_1'
	%Evaluate = 'TA_1_1_1 = calc_avg_trace(clean_tv,TA_1_1_1,TA_ECCC,-1);' 
	Evaluate =	'TA_1_1_1 = calc_avg_trace(clean_tv,TA_1_1_1,[TA_Stonewall,TA_ECCC],-1);'
	title = 'Air temperature at 4m (HMP)'
	units = '°C'
[End]

; [Trace]
; 	variableName = 'VPD_1_1_1'
; 	Evaluate = 'VPD_1_1_1 = VPD;
; 				[e_H, ea_H] = vappress(TA_1_1_1, RH_1_1_1);
; 				VPD_fill = 1000 .* (ea_H - e_H);
; 				VPD_1_1_1 = calc_avg_trace(clean_tv,VPD_1_1_1,VPD_fill,-1);
; 				VPD_1_1_1(VPD_1_1_1<0) = 0;' 
; 				title = 'Vapour pressure deficit Vapour pressure deficit (from 2m HMP)'
; 	units = 'hPa'
; [End]

%added this new calculation VPD using vapPressMet instead of vappress

[Trace]
	variableName = 'VPD_1_1_1'
	Evaluate = '[e_H,ea_H] = vapPressMet(TA_1_1_1,RH_1_1_1); VPD_1_1_1 = ea_H - e_H; VPD_1_1_1 = VPD_1_1_1*10; % Converting kPa to hPa'
	
	title = 'Vapour pressure deficit Vapour pressure deficit (from 2m HMP)'
	units = 'hPa'
[End]


% ----------------------------------------------------------------------------
% MET_PRECIP
% ----------------------------------------------------------------------------

[Trace]
	variableName = 'P_1_1_1'
	Evaluate = 'P_1_1_1 = calc_avg_trace(clean_tv,P_RAIN_1_1_1,[P_Stonewall,P_ECCC],-1);'
	title = 'precipitation at 1.05m height'
	units = 'mm' 
[End]

% ----------------------------------------------------------------------------
% MET_RAD
% ----------------------------------------------------------------------------

[Trace]
	variableName = 'LW_IN_1_1_1'
	Evaluate = 'LW_IN_1_1_1 = LW_IN_1_1_1;'
	title = 'incoming long wave radiation by CNR4'
	units = 'W/m^2'
[End]

[Trace]
	variableName = 'LW_OUT_1_1_1'
	Evaluate = 'LW_OUT_1_1_1 = LW_OUT_1_1_1;'
	title = 'outgoing long wave radiation by CNR4'
	units = 'W/m^2'
[End]

[Trace]
	variableName = 'PPFD_IN_1_1_1'
	Evaluate = 'PPFD_IN_1_1_1 = PPFD_IN_1_1_1;'
	title = 'incoming PAR'
	units = 'µmol/m^2/s'
[End]

[Trace]
	variableName = 'SW_IN_1_1_1'
	Evaluate = 'SW_IN_1_1_1 = calc_avg_trace(clean_tv,SW_IN_1_1_1,[Stonewall_SW_IN_1_1_1],-1);'
	%'SW_IN_1_1_1 = SW_IN_1_1_1;'
	title = 'incoming shortwave radiation by CNR4'
	units = 'W/m^2'
[End]

[Trace]
	variableName = 'SW_OUT_1_1_1'
	Evaluate = 'SW_OUT_1_1_1 = SW_OUT_1_1_1;'
	title = 'reflected shortwave radiation by CNR4'
	units = 'W/m^2'
[End]

[Trace]
	variableName = 'ALB_1_1_1'
	Evaluate = 'ALB_1_1_1 = SW_OUT_1_1_1 ./ SW_IN_1_1_1;
				ALB_1_1_1 = 100 .* ALB_1_1_1;
				ALB_1_1_1(ALB_1_1_1<1E-05) = NaN;
				ALB_1_1_1(ALB_1_1_1>100) = NaN;'
	title = 'albedo by CNR4'
	units = '%'
[End]

[Trace]
	variableName = 'NETRAD_1_1_1'
	Evaluate = 'NETRAD_1_1_1 = SW_IN_1_1_1 + LW_IN_1_1_1 - (SW_OUT_1_1_1 + LW_OUT_1_1_1);
				NETRAD_1_1_1(NETRAD_1_1_1<-200) = NaN;
				NETRAD_1_1_1(NETRAD_1_1_1>1000) = NaN;'
	title = 'net radiation by CNR4'
	units = 'W/m^2'
[End]


% ----------------------------------------------------------------------------
% MET_SOIL
% ----------------------------------------------------------------------------

[Trace]
	variableName = 'TS_1_1_1'
	Evaluate = 'TS_1_1_1 = TS_1_1_1;'
	title = 'average soil temperature at 10cm below soil-water interface'
	units = '°C'
[End]

[Trace]
	variableName = 'TS_2_1_1'
	Evaluate = 'TS_2_1_1 = TS_2_1_1;'
	title = 'average soil temperature at 20cm? above soil-water interface'
	units = '°C'
[End]

[Trace]
	variableName = 'TS_3_1_1'
	Evaluate = 'TS_3_1_1 = TS_3_1_1;'
	title = 'average soil temperature at 40cm above soil-water interface'
	units = '°C'
[End]


% ----------------------------------------------------------------------------
% MET_WIND
% ----------------------------------------------------------------------------

[Trace]
	variableName = 'MO_LENGTH'
	Evaluate = 'MO_LENGTH = L;'
	title = 'Monin-Obukhov length'
	units = 'm'
[End]

[Trace]
	variableName = 'TAU'
	Evaluate = 'TAU = TAU;'
	title = 'Corrected momentum flux'
	units = 'kg m^-{1} s^{-2}'
[End]

[Trace]
	variableName = 'U_SIGMA'
	Evaluate = 'U_SIGMA = sqrt(u_var);'
	title = 'Standard deviation of velocity fluctuations'
	units = 'm s^{-1}'
[End]

[Trace]
	variableName = 'USTAR'
	Evaluate = 'USTAR = USTAR;'
	title = 'Friction Velocity'
	units = 'm/s'
[End]

[Trace]
	variableName = 'V_SIGMA'
	Evaluate = 'V_SIGMA = sqrt(v_var);'
	title = 'Standard deviation of lateral velocity fluctuations'
	units = 'm s^{-1}'
[End]

[Trace]
	variableName = 'W_SIGMA'
	Evaluate = 'W_SIGMA = sqrt(w_var);'
	title = 'Standard deviation of vertical velocity fluctuations'
	units = 'm s^{-1}'
[End]

[Trace]
	variableName = 'WS_1_1_1' %added qualifier by Joyson
	Evaluate = 'WS_1_1_1 = calc_avg_trace(clean_tv,WS,[WS_Stonewall,WS_ECCC,],-1);'
	title = 'wind speed by csat'
	units = 'm/s' 
[End]

[Trace]
	variableName = 'WD_1_1_1'
	Evaluate = 'WD_1_1_1 = calc_avg_trace(clean_tv,wind_dir,[WD_Stonewall,WD_ECCC],0);'
	title = 'wind direction by csat'
	units = 'm/s'
[End]

[Trace]
	variableName = 'zdL' % changed to small letter to match with other sites
	Evaluate = 'zdl = zdL;'
	title = 'Monin-Obukhov stability parameter. EddyPro output name: (z-d)/L'
	units = 'dimensionless'
[End]


% ----------------------------------------------------------------------------
% PRODUCTS
% ----------------------------------------------------------------------------

%[Trace]
%	variableName = 'NEE'
%	Evaluate = 'NEE = sum([FC,SC],2,''omitnan'');
%		    NEE(all(isnan(FC)&isnan(SC),2)) = NaN;'
%	title = 'Net ecosystem exchange'
%	units = 'µmol m^{-2} s^{-1}'
%[End]


% ----------------------------------------------------------------------------
% Misc variables
% ----------------------------------------------------------------------------

[Trace]
	variableName = 'TKE'
	Evaluate = 'TKE = TKE;'
	title = 'Turbulent kinetic energy'
	units = 'm^2 s-2'
[End]

[Trace]
    variableName = 'ET'
    Evaluate = 'ET = LE./Latent_heat_vaporization(TA_1_1_1); % use biomet helper for L_vap
				ET = ET*60*30;' % convert units from kg/m^2/s to mm/30min standard unit for EddyPro
    title = 'Evapotranspiration flux'
    units = 'mm 30min^{-1}'          
[End]

%[Trace]
%	variableName = 'RG_1_1_1'
%	Evaluate = 'RG_1_1_1 = SW_IN_1_1_1+LW_IN_1_1_1;'
%	title = 'Global Radiation - total incoming SW & LW'
%	units = 'W/m^2'
%[End]

[Trace]
	variableName = 'aerodynamic_resistance_momentum'
	Evaluate = '[ga_m_vel, ga_h_vel] = calc_aerodynamic_conductance(WS_1_1_1,USTAR,zdL); %change WS to WS_1_1_1 and ZL to zdL
                    aerodynamic_resistance_momentum = 1./ga_m_vel;'
	title = 'Aerodynamic resistance for momentum'
	units = 's m^{-1}'
	minMax = [0,50000]
[End]

[Trace]
	variableName = 'aerodynamic_resistance_scalar'
	Evaluate = '[ga_m_vel, ga_h_vel] = calc_aerodynamic_conductance(WS_1_1_1,USTAR,zdL); %change WS to WS_1_1_1 and ZL to zdL
                    aerodynamic_resistance_scalar = 1./ga_h_vel;'
	title = 'Aerodynamic resistance for heat and water vapour'
	units = 's m^{-1}'
	minMax = [0,50000]
[End]

[Trace]
	variableName = 'hpbl'
	Evaluate = 'hpbl = hpbl;'
	title = 'Estimated Height of Planetary Boundary Layer'
	units = 'm/s' 
	minMax = [0,3000]
[End]