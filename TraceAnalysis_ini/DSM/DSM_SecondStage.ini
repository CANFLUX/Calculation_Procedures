%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Second stage ini_file for DSM
%
% May, 2022 Sara Knox
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Site_name = 'Delta Site Marsh'
SiteID = 'DSM'
input_path    = ''
output_path   = '/Users/ziyi/MicrometLab/local_database/yyyy/DSM/clean/SecondStage/' 
high_level_path = {}
searchPath = 'low_level,current'

% 20221014: Modified for ziyi local database

% Contents:
% Misc. variables
% Profiles
% Radiation
% Soil
% Turbulent fluxes
% Carbon balance terms
% Energy storage terms

% Revisions:
%
% Jan 23, 2023 (Zoran)
%   - added wlen=24;thres=4; to TA_1_1_1 otherwise these two parameters 
%     are not defined.

% ----------------------------------------------------------------------------
% Misc. important variables - temperature, pressure etc.
% ----------------------------------------------------------------------------

[Trace]
	variableName = 'TA_1_1_1'

	Evaluate = 'TA_1_2_1 = calc_avg_trace(clean_tv,TA_1_2_1,TA_ECCC,-1);

				% Time Shift Correction
				tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); 
				TA_1_2_1(tsc(1:end-1)) = TA_1_2_1(tsc(2:end));
				
				% Spike removal
				wlen=24; % data points used in each window (unit: 30min)
				thres=4; % ratio of std for lower and upper bound
				TA_1_2_1 = run_std_dev(TA_1_2_1,clean_tv,wlen,thres);'

	title = 'Air temperature at 2m (HMP)'
	units = '^oC'
	minMax = [-20,50]
[End]

[Trace]
	variableName = 'TA_1_2_1'

	Evaluate = 'TA_1_2_1 = calc_avg_trace(clean_tv,TA_1_2_1,TA_ECCC,-1);

				% Time Shift Correction
				tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); 
				TA_1_2_1(tsc(1:end-1)) = TA_1_2_1(tsc(2:end));
				TA_1_2_1 = run_std_dev(TA_1_2_1,clean_tv,wlen,thres);'

	title = 'Air temperature at 350cm (HMP)'
	units = '^oC'
	minMax = [-20,50]
[End]

[Trace]
	variableName = 'RH_1_1_1'

	Evaluate = 'RH_1_1_1 = calc_avg_trace(clean_tv,RH_1_1_1,RH_ECCC,-1);

				% Time Shift Correction
				tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); 
				RH_1_1_1(tsc(1:end-1)) = RH_1_1_1(tsc(2:end));
				RH_1_1_1 = run_std_dev(RH_1_1_1,clean_tv,wlen,thres);'

	title = 'RH at 2m (HMP)'
	units = '%'
	minMax = [0,110]
	clamped_minMax = [0,100] 
[End]

[Trace]
	variableName = 'RH_1_2_1'

	Evaluate = 'RH_1_2_1 = calc_avg_trace(clean_tv,RH_1_2_1,RH_ECCC,-1);

				% Time Shift Correction
				tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); 
				RH_1_2_1(tsc(1:end-1)) = RH_1_2_1(tsc(2:end));
				RH_1_2_1 = run_std_dev(RH_1_2_1,clean_tv,wlen,thres);'

	title = 'RH at 350cm (HMP)'
	units = '%'
	minMax = [0,110]
	clamped_minMax = [0,100]
[End]

[Trace]
	variableName = 'VPD_1_1_1'

	Evaluate = '[e_H,ea_H] = vappress(TA_1_1_1,RH_1_1_1);
				VPD_1_1_1 = ea_H - e_H;
				VPD_1_1_1 = VPD_1_1_1*10;' % Converting kPa to hPa

	title = 'Vapour pressure deficit Vapour pressure deficit (from 2m HMP)'
	units = 'hPa'
	minMax = [0,100]
[End]

[Trace]
	variableName = 'TS_1'

	Evaluate = 'TS_1 = calc_avg_trace(clean_tv,[TS_1_1_1,TS_2_1_1]);
				
				% Time Shift Correction
				tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); 
				TS_1(tsc(1:end-1)) = TS_1(tsc(2:end));
				TS_1 = run_std_dev(TS_1,clean_tv,wlen,thres);'

	title = 'average soil temperature at 5cm depth'
	units = '^oC'
	minMax = [-20,60]
[End]

[Trace]
	variableName = 'TS_2'

	Evaluate = 'TS_2 = calc_avg_trace(clean_tv,[TS_1_2_1,TS_2_2_1]);
				
				% Time Shift Correction
				tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); 
				TS_2(tsc(1:end-1)) = TS_2(tsc(2:end));
				TS_2 = run_std_dev(TS_2,clean_tv,wlen,thres);'

	title = 'average soil temperature at 10cm depth'
	units = '^oC'
	minMax = [-20,60]
[End]

[Trace]
	variableName = 'TS_3'

	Evaluate = 'TS_3 = calc_avg_trace(clean_tv,[TS_1_3_1,TS_2_3_1]);
				
				% Time Shift Correction
				tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); 
				TS_3(tsc(1:end-1)) = TS_3(tsc(2:end));
				TS_3 = run_std_dev(TS_3,clean_tv,wlen,thres);'

	title = 'average soil temperature at 20cm depth'
	units = '^oC'
	minMax = [-20,60]
[End]

[Trace]
	variableName = 'TS_4'

	Evaluate = 'TS_4 = calc_avg_trace(clean_tv,[TS_1_4_1,TS_2_4_1]);

				% Time Shift Correction
				tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); 
				TS_4(tsc(1:end-1)) = TS_4(tsc(2:end));
				TS_4 = run_std_dev(TS_4,clean_tv,wlen,thres);'

	title = 'average soil temperature at 50cm depth'
	units = '^oC'
	minMax = [-20,60]
[End]

[Trace]
	variableName = 'G_1'

	Evaluate = 'p=find(clean_tv<=datenum(2021,09,09,12,30,0));
				mins =[nanmin(G_1_1_1), nanmin(G_2_1_1),  nanmin(G_3_1_1)];
				maxs =[nanmax(G_1_1_1), nanmax(G_2_1_1),  nanmax(G_3_1_1)];
				slps =[ 40.9846,  39.0569,  29.2824]; 
				ofts =[-16.8590, -16.1501, -11.2575];

				G_1_1_1(p)=slps(1)*((G_1_1_1(p)-mins(1))./(maxs(1)-mins(1)))+ofts(1);
				G_2_1_1(p)=slps(2)*((G_2_1_1(p)-mins(2))./(maxs(2)-mins(2)))+ofts(2);
				G_3_1_1(p)=slps(3)*((G_3_1_1(p)-mins(3))./(maxs(3)-mins(3)))+ofts(3);

				G_1 = calc_avg_trace(clean_tv,[G_1_1_1, G_2_1_1, G_3_1_1]);

				% Time Shift Correction
				tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); 
				G_1(tsc(1:end-1)) = G_1(tsc(2:end));
				G_1 = run_std_dev(G_1,clean_tv,wlen,thres);'

	title = 'soil heat flux at 5cm depth'
	units = 'âˆžC'
	minMax = [-40,60]
[End]

[Trace]
	variableName = 'SW_IN_1_1_1'

	Evaluate = 'tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); % Time Shift Correction
				SW_IN_1_1_1(tsc(1:end-1)) = SW_IN_1_1_1(tsc(2:end));

				% Blocking off values before installation (CNR4, 2021-Sep-16 17:00)
				ind_delete=find(clean_tv<=datenum(2021,9,16,17,0,0)); % uninstalled
				SW_IN_1_1_1(ind_delete,:)=NaN;

				SW_IN_1_1_1 = calc_avg_trace(clean_tv,SW_IN_1_1_1,RBM_SW_IN_1_1_1,-1);'

	title = 'incoming shortwave radiation by CNR4'
	units = 'W/m^2'
	minMax = [-20,2000]
[End]

[Trace]
	variableName = 'SW_OUT_1_1_1'

	Evaluate = 'tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); % Time Shift Correction
				SW_OUT_1_1_1(tsc(1:end-1)) = SW_OUT_1_1_1(tsc(2:end));

				% Blocking off values before installation (CNR4, 2021-Sep-16 17:00)
				ind_delete=find(clean_tv<=datenum(2021,9,16,17,0,0)); % uninstalled
				SW_OUT_1_1_1(ind_delete,:)=NaN;'

	title = 'reflected shortwave radiation by CNR4'
	units = 'W/m^2'
	minMax = [-20,1500] 
[End]

[Trace]
	variableName = 'LW_IN_1_1_1'

	Evaluate = 'tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); % Time Shift Correction
				LW_IN_1_1_1(tsc(1:end-1)) = LW_IN_1_1_1(tsc(2:end));

				% Blocking off values before installation (CNR4, 2021-Sep-16 17:00)
				ind_delete=find(clean_tv<=datenum(2021,9,16,17,0,0)); % uninstalled
				LW_IN_1_1_1(ind_delete,:)=NaN;

				LW_IN_1_1_1 = calc_avg_trace(clean_tv,LW_IN_1_1_1,RBM_LW_IN_1_1_1,-1);'

	title = 'incoming long wave radiation by CNR4'
	units = 'W/m^2'
	minMax = [50,1000]
[End]

[Trace]
	variableName = 'LW_OUT_1_1_1'

	Evaluate = 'tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); % Time Shift Correction
				LW_OUT_1_1_1(tsc(1:end-1)) = LW_OUT_1_1_1(tsc(2:end));

				% Blocking off values before installation (CNR4, 2021-Sep-16 17:00)
				ind_delete=find(clean_tv<=datenum(2021,9,16,17,0,0)); % uninstalled
				LW_OUT_1_1_1(ind_delete,:)=NaN;'

	title = 'outgoing long wave radiation by CNR4'
	units = 'W/m^2'
	minMax = [0,1000]
[End]

[Trace]
	variableName = 'NETRAD_1_1_1'

	Evaluate = 'NETRAD_1_1_1 = NETRAD_1_1_1;'

	title = 'net radiation by CNR4'
	units = 'W/m^2'
	minMax = [-100,1000]
[End]

[Trace]
	variableName = 'ALB_1_1_1'

	Evaluate = 'tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); % Time Shift Correction
				ALB_1_1_1(tsc(1:end-1)) = ALB_1_1_1(tsc(2:end));

				% Blocking off values before installation (CNR4, 2021-Sep-16 17:00)
				ind_delete=find(clean_tv<=datenum(2021,9,16,17,0,0)); % uninstalled
				ALB_1_1_1(ind_delete,:)=NaN;'

	title = 'albedo by CNR4'
	units = '%'
	minMax = [-10,110]
	clamped_minMax = [0,100]
[End]

[Trace]
	variableName = 'PPFD_IN_1_1_1'

	Evaluate = 'tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); % Time Shift Correction
				PPFD_IN_1_1_1(tsc(1:end-1)) = PPFD_IN_1_1_1(tsc(2:end));

				% Blocking off values before installation (PARin/PARout, 2021-Sep-16 17:00)
				ind_delete=find(clean_tv<=datenum(2021,9,16,17,0,0)); % uninstalled
				PPFD_IN_1_1_1(ind_delete,:)=NaN;

				PPFD_IN_1_1_1 = calc_avg_trace(clean_tv,PPFD_IN_1_1_1,RBM_PPFD_IN_1_1_1,-1);'

	title = 'incoming PAR'
	units = '\mu mol/m^2/s'
	minMax = [-40,3000]
[End]

[Trace]
	variableName = 'PPFD_OUT_1_1_1'

	Evaluate = 'tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); % Time Shift Correction
				PPFD_OUT_1_1_1(tsc(1:end-1)) = PPFD_OUT_1_1_1(tsc(2:end));
				
				% Blocking off values before installation (PARin/PARout, 2021-Sep-16 17:00)
				ind_delete=find(clean_tv<=datenum(2021,9,16,17,0,0)); % uninstalled
				PPFD_OUT_1_1_1(ind_delete,:)=NaN;'

	title = 'reflected PAR'
	units = '\mu mol/m^2/s'
	minMax = [-40,1500]
[End]

[Trace]
	variableName = 'PPFD_IN_2_1_1'

	Evaluate = 'tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); % Time Shift Correction
				PPFD_IN_2_1_1(tsc(1:end-1)) = PPFD_IN_2_1_1(tsc(2:end));'			

	title = 'incoming PAR measured by BF5'
	units = '\mu mol/m^2/s'
	minMax = [-40,3000]
[End]

[Trace]
	variableName = 'PPFD_DIF_1_1_1'

	Evaluate = 'tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); % Time Shift Correction
				PPFD_DIF_1_1_1(tsc(1:end-1)) = PPFD_DIF_1_1_1(tsc(2:end));'

	title = 'diffuse PAR measured by BF5'
	units = '\mu mol/m^2/s'
	minMax = [-40,3000]
[End]

[Trace]
	variableName = 'PRI_1_1_1'

	Evaluate = 'tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); % Time Shift Correction
				PRI_1_1_1(tsc(1:end-1)) = PRI_1_1_1(tsc(2:end));

				% Delete data during maintenance
				t_del=[datenum(2022,04,26,00,00,0) , datenum(2022,05,30,09,00,0)]; % cable repair
				PRI_1_1_1=del_sp_seg(PRI_1_1_1,clean_tv,t_del);'

	title = 'Photochemical reflectance index'
	units = 'nondimensional'
	minMax = [-1.1,1.1]
	clamped_minMax = [-1,1]
[End]

[Trace]
	variableName = 'NDVI_1_1_1'

	Evaluate = 'tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); % Time Shift Correction
				NDVI_1_1_1(tsc(1:end-1)) = NDVI_1_1_1(tsc(2:end));

				% Delete data during maintenance
				t_del=[datenum(2022,04,26,00,00,0) , datenum(2022,05,30,09,00,0)]; % cable repair
				NDVI_1_1_1=del_sp_seg(NDVI_1_1_1,clean_tv,t_del);'

	title = 'Normalized difference vegetation index'
	units = 'nondimensional'
	minMax = [-1.1,1.1]
	clamped_minMax = [-1,1]
[End]

[Trace]
	variableName = 'PA_1_1_1'

	Evaluate = 'PA_ECCC(ind_delete) = NaN;

				% Time Shift Correction
				tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); 
				PA_1_1_1(tsc(1:end-1)) = PA_1_1_1(tsc(2:end));

				% Basic filtering
				PA_1_1_1(PA_1_1_1<95) = NaN;

                PA_1_1_1 = calc_avg_trace(clean_tv,PA_1_1_1,PA_ECCC,-1);
				PA_1_1_1 = run_std_dev(PA_1_1_1,clean_tv,wlen,thres);'

	title = 'air pressure by CS106 installed in the logger box'
	units = 'kPa' 
	minMax = [90,110]
[End]

[Trace]
	variableName = 'P_1_1_1'

	Evaluate = 'P_ECCC(ind_delete) = NaN;

				% Time Shift Correction
				tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); 
				P_1_1_1(tsc(1:end-1)) = P_1_1_1(tsc(2:end));

				P_1_1_1 = calc_avg_trace(clean_tv,P_1_1_1,P_ECCC,-1);'

	title = 'precipitation at 1.05m height'
	units = 'mm' 
	minMax = [0,20]
[End]

[Trace]
	variableName = 'DO_1_1_1'
 
    % Remove all bad/missing values based on the flagDO_1_1_1
	Evaluate = 'DO_1_1_1 = DO_1_1_1;'

	title = 'dissolved oxygen'
	units = 'mg/l'
	minMax = [0,70000]
[End]

%[Trace]
%	variableName = 'DO_1_1_1'
%
%	Evaluate = 'ind_delete=find(clean_tv<=datenum(2021,12,02,14,0,0)); % uninstalled
%				DO_1_1_1(ind_delete,:)=NaN;
%				% Blocking off values before installation (Manta+20, 2021-Dec-02 14:00)
%
%				% Delete data during regular maintenance
%				t_del=[datenum(2022,06,25,09,30,0) , datenum(2022,06,25,10,30,0);
%					   datenum(2022,08,30,10,15,0) , datenum(2022,08,30,12,30,0);
%					   datenum(2022,09,15,08,50,0) , datenum(2022,09,19,13,30,0);
%					   datenum(2022,09,30,10,30,0) , datenum(2022,09,30,11,30,0);];
%				
%				DO_1_1_1 = del_sp_seg(DO_1_1_1,clean_tv,t_del);'
%				%DO_1_1_1 = run_std_dev(DO_1_1_1,clean_tv,wlen,thres);'
%
%	title = 'dissolved oxygen'
%	units = 'mg/l'
%	minMax = [0,70000]
%[End]



[Trace]
	variableName = 'DOperc_1_1_1'

	Evaluate = 'ind_delete=find(clean_tv<=datenum(2021,12,02,14,0,0)); % uninstalled
				DOperc_1_1_1(ind_delete,:)=NaN;
				% Blocking off values before installation (Manta+20, 2021-Dec-02 14:00)

				% Delete data during regular maintenance
				t_del=[datenum(2022,06,25,09,30,0) , datenum(2022,06,25,10,30,0);
					   datenum(2022,08,30,10,15,0) , datenum(2022,08,30,12,30,0);
					   datenum(2022,09,15,08,50,0) , datenum(2022,09,19,13,30,0);
					   datenum(2022,09,30,10,30,0) , datenum(2022,09,30,11,30,0);];
				DOperc_1_1_1 = del_sp_seg(DOperc_1_1_1,clean_tv,t_del);'
				%DOperc_1_1_1 = run_std_dev(DOperc_1_1_1,clean_tv,wlen,thres);'

	title = 'dissolved oxygen ratio'
	units = '% saturation'
	minMax = [0,70000] 
[End]

[Trace]
	variableName = 'COND_WATER_1_1_1'

	Evaluate = 'ind_delete=find(clean_tv<=datenum(2021,12,02,14,0,0)); % uninstalled
				COND_WATER_1_1_1(ind_delete,:)=NaN;
				% Blocking off values before installation (Manta+20, 2021-Dec-02 14:00)

				% Delete data during regular maintenance
				t_del=[datenum(2022,06,25,09,30,0) , datenum(2022,06,25,10,30,0);
					   datenum(2022,08,30,10,15,0) , datenum(2022,08,30,12,30,0);
					   datenum(2022,09,15,08,50,0) , datenum(2022,09,19,13,30,0);
					   datenum(2022,09,30,10,30,0) , datenum(2022,09,30,11,30,0);];
				COND_WATER_1_1_1 = del_sp_seg(COND_WATER_1_1_1,clean_tv,t_del);
				COND_WATER_1_1_1 = run_std_dev(COND_WATER_1_1_1,clean_tv,wlen,thres);'

	title = 'conductivity of water'
	units = 'microS/cm'
	minMax = [0,70000]
[End]

[Trace]
	variableName = 'WTD_1_1_1'

	Evaluate = 'ind_delete=find(clean_tv<=datenum(2021,12,02,14,0,0)); % uninstalled
				WTD_1_1_1(ind_delete,:)=NaN;
				% Blocking off values before installation (Manta+20, 2021-Dec-02 14:00)

				% Delete data during regular maintenance
				t_del=[datenum(2022,06,25,09,30,0) , datenum(2022,06,25,10,30,0);
					   datenum(2022,08,30,10,15,0) , datenum(2022,08,30,12,30,0);
					   datenum(2022,09,15,08,50,0) , datenum(2022,09,19,13,30,0);
					   datenum(2022,09,30,10,30,0) , datenum(2022,09,30,11,30,0);];
				WTD_1_1_1 = del_sp_seg(WTD_1_1_1,clean_tv,t_del);
				WTD_1_1_1 = run_std_dev(WTD_1_1_1,clean_tv,wlen,thres);'

	title = 'water table height'
	units = 'm'
	minMax = [0.1,3]
[End]

[Trace]
	variableName = 'ORP_1_1_1'

	Evaluate = 'ind_delete=find(clean_tv<=datenum(2021,12,02,14,0,0)); % uninstalled
				ORP_1_1_1(ind_delete,:)=NaN;
				% Blocking off values before installation (Manta+20, 2021-Dec-02 14:00)

				% Delete data during regular maintenance
				t_del=[datenum(2022,06,25,09,30,0) , datenum(2022,06,25,10,30,0);
					   datenum(2022,08,30,10,15,0) , datenum(2022,08,30,12,30,0);
					   datenum(2022,09,15,08,50,0) , datenum(2022,09,19,13,30,0);
					   datenum(2022,09,30,10,30,0) , datenum(2022,09,30,11,30,0);];
				ORP_1_1_1=del_sp_seg(ORP_1_1_1,clean_tv,t_del);


				% Delete unreasonable data due to instrument issue (pH and ORP)
				t_del=[datenum(2022,04,23,15,30,0) , datenum(2022,06,25,16,00,0);
					   datenum(2022,07,02,20,00,0) , datenum(2022,07,27,13,30,0);
					   datenum(2022,07,29,10,00,0) , datenum(2022,08,30,13,00,0);
					   datenum(2022,09,09,00,00,0) , datenum(2022,09,19,12,30,0);];
				ORP_1_1_1 = del_sp_seg(ORP_1_1_1,clean_tv,t_del);
				ORP_1_1_1 = run_std_dev(ORP_1_1_1,clean_tv,wlen,thres);'

	title = 'oxygen reduction potential'
	units = 'mV'
	minMax = [-500,500]
[End]

[Trace]
	variableName = 'pH_1_1_1'

	Evaluate = 'ind_delete=find(clean_tv<=datenum(2021,12,02,14,0,0)); % uninstalled
				pH_1_1_1(ind_delete,:)=NaN;
				% Blocking off values before installation (Manta+20, 2021-Dec-02 14:00)

				% Delete data during regular maintenance
				t_del=[datenum(2022,06,25,09,30,0) , datenum(2022,06,25,10,30,0);
					   datenum(2022,08,30,10,15,0) , datenum(2022,08,30,12,30,0);
					   datenum(2022,09,15,08,50,0) , datenum(2022,09,19,13,30,0);
					   datenum(2022,09,30,10,30,0) , datenum(2022,09,30,11,30,0);];					   
				pH_1_1_1=del_sp_seg(pH_1_1_1,clean_tv,t_del);


				% Delete unreasonable data due to instrument issue (pH and ORP)
				t_del=[datenum(2022,04,23,15,30,0) , datenum(2022,06,25,16,00,0);
					   datenum(2022,07,02,20,00,0) , datenum(2022,07,27,13,30,0);
					   datenum(2022,07,29,10,00,0) , datenum(2022,08,30,13,00,0);
					   datenum(2022,09,09,00,00,0) , datenum(2022,09,19,12,30,0);];
				pH_1_1_1 = del_sp_seg(pH_1_1_1,clean_tv,t_del);
				pH_1_1_1 = run_std_dev(pH_1_1_1,clean_tv,wlen,thres);'

	title = 'water pH'
	units = 'unitless'
	minMax = [2, 14.5]
[End]

[Trace]
	variableName = 'TW_1_1_1'

	Evaluate = 'ind_delete=find(clean_tv<=datenum(2021,12,02,14,0,0)); % uninstalled
				TW_1_1_1(ind_delete,:)=NaN;
				% Blocking off values before installation (Manta+20, 2021-Dec-02 14:00)

				% Delete data during regular maintenance
				t_del=[datenum(2022,06,25,09,30,0) , datenum(2022,06,25,10,30,0);
					   datenum(2022,08,30,10,15,0) , datenum(2022,08,30,12,30,0);
					   datenum(2022,09,15,08,50,0) , datenum(2022,09,19,13,30,0);
					   datenum(2022,09,30,10,30,0) , datenum(2022,09,30,11,30,0);];
				TW_1_1_1 = del_sp_seg(TW_1_1_1,clean_tv,t_del);
				TW_1_1_1 = run_std_dev(TW_1_1_1,clean_tv,wlen,thres);'

	title = 'water temperature'
	units = 'âˆžC'
	minMax = [5, 40]
[End]

[Trace]
	variableName = 'WS_1_1_1'

	Evaluate = 'WS_ECCC(ind_delete) = NaN;

				% Time Shift Correction
				tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); 
				WS_1_1_1(tsc(1:end-1)) = WS_1_1_1(tsc(2:end));
				WS_1_1_1 = calc_avg_trace(clean_tv,WS_1_1_1,WS_ECCC,-1);'

	title = 'wind speed by RM Young 05103'
	units = 'm/s' 
	minMax = [-20,20]
[End]

[Trace]
	variableName = 'WD_1_1_1'

	Evaluate = 'WD_ECCC(ind_delete) = NaN;

				% Time Shift Correction
				tsc=find(clean_tv<=datenum(2021,11,11,09,30,0)); 
				WD_1_1_1(tsc(1:end-1)) = WD_1_1_1(tsc(2:end));
				WD_1_1_1 = calc_avg_trace(clean_tv,WD_1_1_1,WD_ECCC,-1);'

	title = 'wind direction by RM Young 05103'
	units = 'm/s' 
	minMax = [0,360]
[End]

[Trace]
	variableName = 'wind_speed'

	Evaluate = 'wind_speed = calc_avg_trace(clean_tv,wind_speed,WS_ECCC,-1);'

	title = 'Mean wind speed (CSAT3)'
	units = 'm/s' 
	minMax = [-20,20] 
[End]

[Trace]
	variableName = 'wind_dir'

	Evaluate = 'wind_dir = calc_avg_trace(clean_tv,wind_dir,WD_ECCC,-1);'

	title = 'Direction from which the wind blows, with respect to Geographic or Magnetic north'
	units = 'm/s' 
	minMax = [0,360]
[End]

% ----------------------------------------------------------------------------
% Turbulent fluxes LI-7200 & LI-7700
% ----------------------------------------------------------------------------

[Trace]
	variableName = 'CO2'

	Evaluate = 'CO2 = CO2;'

	title = 'CO2 in mole fraction of wet air'
	units = '\mu mol / mol wet air'
	minMax = [300,800]
[End]

[Trace]
	variableName = 'H2O'

	Evaluate = 'H2O = H2O;'

	title = 'H2O in mole fraction of wet air'
	units = 'mm mol / mol wet air'
	minMax = [300,800]
[End]

[Trace]
	variableName = 'CH4'

	Evaluate = 'CH4 = CH4;'

	title = 'CH4 in mole fraction of wet air'
	units = 'nmol / mol wet air'
	minMax = [1000,5500]
[End]

[Trace]
	variableName = 'USTAR'

	Evaluate = 'USTAR = USTAR;'

	title = 'Friction Velocity'
	units = 'm/s'
	minMax = [0,5]
[End]

[Trace]
	variableName = 'w_ts_cov'

	Evaluate = 'w_ts_cov = w_ts_cov;'

	title = 'Covariance of w and sonic temperature (Sonic, after rotation)'
	units = 'm/s degK'
	minMax = [-2,2]
[End]

[Trace]
	variableName = 'w_h2o_cov'

	Evaluate = 'w_h2o_cov = w_h2o_cov;'

	title = 'Covariance of w and water vapour mixing ratio (after rotation)'
	units = 'm/s mmol/mol'
	minMax = [-2,2]
[End]

[Trace]
	variableName = 'w_co2_cov'

	Evaluate = 'w_co2_cov = w_co2_cov;'

	title = 'Covariance of w and CO2 (after rotation)'
	units = 'm/s umol/mol'
	minMax = [-4,4]
[End]

[Trace]
	variableName = 'w_ch4_cov'

	Evaluate = 'w_ch4_cov = w_ch4_cov;'

	title = 'Covariance of w and CH4 (after rotation)'
	units = 'm/s nmol/mol'
	minMax = [-2.5,2.5]
[End]

[Trace]
	variableName = 'LE'

	Evaluate = 'LE = LE;'

	title = 'Latent Heat Flux'
	units = 'W m^{-2}'
	minMax = [-50,600]

	Ameriflux_Variable = 'LE'
	Ameriflux_DataType = 'AMF_BASE_HH'
[End]

[Trace]
	variableName = 'SLE'

	Evaluate = 'SLE = SLE;'

	title = 'Estimate of storage latent heat flux'
	units = 'W m^{-2}'
	minMax = [-50,600]

	Ameriflux_Variable = 'SLE'
	Ameriflux_DataType = 'AMF_BASE_HH'
[End]

[Trace]
	variableName = 'H'

	Evaluate = 'H = H;'

	title = 'sensible heat flux'
	units = 'W m^{-2}'
	minMax = [-300,800]

	Ameriflux_Variable = 'H'
	Ameriflux_DataType = 'AMF_BASE_HH'
[End]

[Trace]
	variableName = 'SH'

	Evaluate = 'SH = SH;'

	title = 'Estimate of storage sensible heat flux'
	units = 'W m^{-2}'
	minMax = [-300,800]

	Ameriflux_Variable = 'SH'
	Ameriflux_DataType = 'AMF_BASE_HH'
[End]

[Trace]
	variableName = 'FC'

	Evaluate = 'FC = FC;'
	
	title = 'CO_2 Flux'
	units = '\mu mol m^{-2} s^{-1}'
	minMax = [-60,50]

	Ameriflux_Variable = 'FC'
	Ameriflux_DataType = 'AMF_BASE_HH'
[End]

[Trace]
	variableName = 'SC'

	Evaluate = 'SC = SC;'

	title = 'Estimate of storage CO2 flux'
	units = 'umol/m^2/s'
	minMax = [-60,50]

	Ameriflux_Variable = 'SC'
	Ameriflux_DataType = 'AMF_BASE_HH'
[End]

[Trace]
	variableName = 'NEE'

	Evaluate = 'NEE = sum([FC,SC],2,''omitnan'');
		    NEE(all(isnan(FC)&isnan(SC),2)) = NaN;'
	
	title = 'net ecosystem exchange'
	units = '\mu mol m^{-2} s^{-1}'
	minMax = [-60,50]

	Ameriflux_Variable = 'NEE'
	Ameriflux_DataType = 'AMF_BASE_HH'
[End]

[Trace]
	variableName = 'FCH4'

	Evaluate = 'FCH4 = FCH4;'
	
	title = 'CH_4 Flux'
	units = 'nmol m^{-2} s^{-1}'
	minMax = [-200,700]

	Ameriflux_Variable = 'FCH4'
	Ameriflux_DataType = 'AMF_BASE_HH'
[End]

[Trace]
	variableName = 'SCH4'

	Evaluate = 'SCH4 = SCH4;'
	
	title = 'Estimate of storage CH4 flux'
	units = 'nmol m^{-2} s^{-1}'
	minMax = [-200,700]

	Ameriflux_Variable = 'SCH4'
	Ameriflux_DataType = 'AMF_BASE_HH'
[End]

[Trace]
	variableName = 'USTAR'

	Evaluate = 'USTAR = USTAR;'

	title = 'Friction Velocity'
	units = 'm/s'
	minMax = [0,5]
[End]

[Trace]
	variableName = 'TKE'

	Evaluate = 'TKE = TKE;'

	title = 'Turbulent kinetic energy'
	units = 'm2 s-2'
	minMax = [0,15]
[End]

[Trace]
	variableName = 'L'

	Evaluate = 'L = L;'

	title = 'Monin-Obukhov length'
	units = 'm'
	minMax = [-200000,200000]
[End]

[Trace]
	variableName = 'U_SIGMA'

	Evaluate = 'U_SIGMA = sqrt(u_var);'

	title = 'Standard deviation of velocity fluctuations'
	units = 'm s-1'
	minMax = [-0.01,5]
[End]

[Trace]
	variableName = 'V_SIGMA'

	Evaluate = 'V_SIGMA = sqrt(v_var);'

	title = 'Standard deviation of lateral velocity fluctuations'
	units = 'm s-1'
	minMax = [-0.01,5]
[End]

[Trace]
	variableName = 'W_SIGMA'

	Evaluate = 'W_SIGMA = sqrt(w_var);'

	title = 'Standard deviation of vertical velocity fluctuations'
	units = 'm s-1'
	minMax = [-0.01,2.5]
[End]

[Trace]
	variableName = 'TAU'

	Evaluate = 'TAU = TAU;'

	title = 'Corrected momentum flux'
	units = 'kg m-1 s-2'
	minMax = [-2.5,2.5]
[End]

[Trace]
	variableName = 'zdL'

	Evaluate = 'zdL = zdL;'

	title = 'Monin-Obukhov stability parameter. EddyPro output name: (z-d)/L'
	units = 'dimensionless'
	minMax = [-50,50]
[End]

% ----------------------------------------------------------------------------
% Misc Meteorological variables
% ----------------------------------------------------------------------------


[Trace]
	variableName = 'aerodynamic_resistance_momentum'

	Evaluate = '[ga_m_vel, ga_h_vel] = calc_aerodynamic_conductance(WS_1_1_1,USTAR,zdL);
                    aerodynamic_resistance_momentum = 1./ga_m_vel;'

	title = 'Aerodynamic resistance for momentum'
	units = 's m^{-1}'
	minMax = [0,50000]
[End]

[Trace]
	variableName = 'aerodynamic_resistance_scalar'

	Evaluate = '[ga_m_vel, ga_h_vel] = calc_aerodynamic_conductance(WS_1_1_1,USTAR,zdL);
                    aerodynamic_resistance_scalar = 1./ga_h_vel;'

	title = 'Aerodynamic resistance for heat and water vapour'
	units = 's m^{-1}'
	minMax = [0,50000]
[End]

[Trace]
	variableName = 'surface_conductance'

	Evaluate = 'available_energy = (NETRAD_1_1_1 - G_1); % could better estimate storage terms for G
		    surface_conductance = calc_surface_conductance_as_flx(TA_1_1_1,...
			    RH_1_1_1, aerodynamic_resistance_scalar, available_energy,...
                            LE, PA_1_1_1);'

	title = 'Surface conductance'
	units = 'mol m^{-2} s^{-1}'
	minMax = [-5,5]
[End]