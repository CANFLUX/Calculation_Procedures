%
% File created:      20220404 S Knox

Site_name = 'Site name'
SiteID = 'XXX' % the name attributed to the site in the database (e.g., DSM or BB1)

Difference_GMT_to_local_time = 8 % in hours


[Trace]
	variableName = 'TA_1_1_1' % Name of variable for first stage  
	title = 'Air temperature at 2m' % Descriptive title for plots/visualization
	originalVariable = 'Air temperature at 2m' % same as variableName
	inputFileName = {'variable_name_1' 'variable_name_2' 'variable_name_3'} % Allows for different variable names over the history of the site (for same trace). The variable name is the one in the database. MUST INCLUDE {} even if only using one variable name!
	inputFileName_dates =[datenum(2019,1,1) datenum(2020,08,5); datenum(2020,08,5) datenum(2021,08,15); datenum(2021,08,15) datenum(2100,1,1)] % Dates that are associated with the input file name. Include date even if sensor never changes (e.g., current date to datenum(2999,1,1))
	measurementType = 'flux' %flux = flux data; met = climate data (i.e., the path that gets added after site name. Could also be met\ECCC) 
	units = 'C' % Output units we want to use 
	instrument = '' % Which instrument it's from 
	instrumentSN = '' % Instrument serial number
	calibrationDates = '' % Calibration dates
        loggedCalibration = [1 0 datenum(2007,1,1) datenum(2007,12,31)] % coefficients needed to go back to original/raw units
        currentCalibration = [-1 0 datenum(2007,1,1) datenum(2020,12,31)] % The correct calibration (can have multiple different calibrations)
	comments = '' % general comments
	minMax = [-10,40] % Minimum and maximum thresholds for filtering
	clamped_minMax = '' different from minMax because it does not kill points (replace with NaNs) but instead if the point is larger than clamped_minMax(2) it replaces it with the value of clamped_minMax(2). Same for clamped_minMax(1) (if less than) (e.g., RH [0-100%])
	zeroPt = [-9999] % To replace -9999 with NaNs (name comes from the fact that the biometric standard was to use zeros for NaNs) 

	plotBottomRight = '' % plot specifications
	plotBottomLeft  = '' % plot specifications
	dependent       = '' % Filter dependent variables based on specified variable. Can have multiple dependants. Note that this needs to be sorted manually. For example, if we use the pump 

[End]


