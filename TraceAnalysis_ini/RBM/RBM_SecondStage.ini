%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Second stage ini_file for DSM
%
% May, 2022 Sara Knox
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Revisions
%
% Mar 24, 2025 (Rosie)
%	- Added NETRAD and ALB back to second stage (removed from first stage RAD include file) on principle, because they are 
% 	  "modelled" not measured.
% Nov 29, 2024 (Rosie)
%	- Removed NEE from second stage, per database meeting on 27 Nov 2024 
%		NEE is calculated in third stage.
% 	- Moved "badWD" trace to first stage, and applied "tag_EC_fluxes" there,
%		now Evaluate feature is available in first stage.
% Nov 12, 2024 (Rosie)
%	- Moved run_std_dev to first stage.
% 	- Cleaned up, removing obsolete parameters (minMax, originalVariable, etc.)
%	- Changed wind_speed from CSAT3 (Flux variable) to have standardized name WS, 
%		in line with EddyPro_Common_FirstStage_include file.
% May 21, 2024 (Zoran)
%   - Replaced:
%		badWD = find(WD_1_1_1 >= lower | WD_1_1_1 <= upper);
%     with:
%   	badWD = (WD_1_1_1 >= lower | WD_1_1_1 <= upper);
%	  to avoid having a trace badWD that is not of a full length. 
%     The original line would return < 17,520 points.
% Feb 3, 2023 (Zoran)
%  - changed searchPath = 'low_level,current' 
%    to: searchPath = 'auto'
% Feb 1, 2024 (ziyi, copy from Ted at Hogg)
%	- create WD filter trace "badWD" to use for cleaning out fluxes when wind is disturbed by tower before sonic


Site_name = 'Richmond Brackish Marsh'
SiteID = 'RBM'
input_path    = ''
output_path   = '/Users/ziyi/MicrometLab/local_database/yyyy/RBM/clean/SecondStage/' 
high_level_path = {}
searchPath = 'auto'

% Contents:
% Misc. variables
% Profiles
% Radiation
% Soil
% Turbulent fluxes
% Carbon balance terms
% Energy storage terms

% ----------------------------------------------------------------------------
% Misc. important variables - temperature, pressure etc. 
% ----------------------------------------------------------------------------

[Trace]
	variableName = 'TA_1_1_1'
	Evaluate = 'ind_delete = find(clean_tv<datenum(2022,6,1,0,30,0)); 
				TA_ECCC(ind_delete) = NaN;
				TA_1_1_1 = calc_avg_trace(clean_tv,TA_1_1_1,TA_ECCC,-1);'

	title = 'Air temperature at 4m (HMP)'
	units = '^oC'
[End]

[Trace]
	variableName = 'TA_1_2_1'

	Evaluate = 'TA_1_2_1 = calc_avg_trace(clean_tv,TA_1_2_1,TA_ECCC,-1);'

	title = 'Air temperature at 6m (HMP)'
	units = '^oC'
[End]

[Trace]
	variableName = 'RH_1_1_1'

	Evaluate = 'RH_ECCC(ind_delete) = NaN;
                RH_1_1_1 = calc_avg_trace(clean_tv,RH_1_1_1,RH_ECCC,-1);'

	title = 'RH at 4m (HMP)'
	units = '%'
[End]

[Trace]
	variableName = 'RH_1_2_1'

	Evaluate = 'RH_1_2_1 = RH_1_2_1;'

	title = 'RH at 6m (HMP)'
	units = '%'
[End]

[Trace]
	variableName = 'VPD_1_1_1'

	Evaluate = '[e_H,ea_H] = vapPressMet(TA_1_1_1,RH_1_1_1);
				VPD_1_1_1 = ea_H - e_H;
				VPD_1_1_1 = VPD_1_1_1*10;' % Converting kPa to hPa

	title = 'Vapour pressure deficit (from 2m HMP)'
	units = 'hPa'
[End]

[Trace]
	variableName = 'TS_1'

	Evaluate = 'TS_1 = calc_avg_trace(clean_tv,[TS_1_1_1,TS_2_1_1]);'

	title = 'average soil temperature at 5cm depth'
	units = '^oC'
[End]

[Trace]
	variableName = 'TS_2'

	Evaluate = 'TS_2 = calc_avg_trace(clean_tv,[TS_1_2_1,TS_2_2_1]);'

	title = 'average soil temperature at 10cm depth'
	units = '^oC'
[End]

[Trace]
	variableName = 'TS_3'

	Evaluate = 'TS_3 = calc_avg_trace(clean_tv,[TS_1_3_1,TS_2_3_1]);'

	title = 'average soil temperature at 20cm depth'
	units = '^oC'
[End]

[Trace]
	variableName = 'TS_4'

	Evaluate = 'TS_4 = calc_avg_trace(clean_tv,[TS_1_4_1,TS_2_4_1]);'

	title = 'average soil temperature at 50cm depth'
	units = '^oC'
[End]

[Trace]
	variableName = 'G_1'

	Evaluate = 'G_1 = calc_avg_trace(clean_tv,[G_1_1_1, G_2_1_1, G_3_1_1]);'

	title = 'soil heat flux at 5cm depth'
	units = '∞C'
[End]

[Trace]
	variableName = 'SW_IN_1_1_1'

	Evaluate = 'SW_IN_1_1_1 = calc_avg_trace(clean_tv,SW_IN_1_1_1,DSM_SW_IN_1_1_1,-1);'

	title = 'incoming shortwave radiation by CNR4'
	units = 'W/m^2'
[End]

[Trace]
	variableName = 'SW_OUT_1_1_1'

	Evaluate = 'SW_OUT_1_1_1 = SW_OUT_1_1_1;'

	title = 'reflected shortwave radiation by CNR4'
	units = 'W/m^2'
[End]

[Trace]
	variableName = 'LW_IN_1_1_1'

	Evaluate = 'LW_IN_1_1_1 = calc_avg_trace(clean_tv,LW_IN_1_1_1,DSM_LW_IN_1_1_1,-1);'

	title = 'incoming long wave radiation by CNR4'
	units = 'W/m^2'
[End]

[Trace]
	variableName = 'LW_OUT_1_1_1'

	Evaluate = 'LW_OUT_1_1_1 = LW_OUT_1_1_1;'

	title = 'outgoing long wave radiation by CNR4'
	units = 'W/m^2'
[End]

[Trace]
	variableName = 'RG_1_1_1'

	Evaluate = 'RG_1_1_1 = SW_IN_1_1_1+LW_IN_1_1_1;'

	title = 'Global Radiation - total incoming SW & LW'
	units = 'W/m^2'
[End]

[Trace]
	variableName = 'NETRAD_1_1_1'

		Evaluate = 'NETRAD_1_1_1 = NETRAD_1_1_1;	
			    	NETRAD_1_1_1 = SW_IN_1_1_1 - SW_OUT_1_1_1 + LW_IN_1_1_1 - LW_OUT_1_1_1;' % see comment in header

	title = 'net radiation by CNR4'
	units = 'W/m^2'
[End]

[Trace]
	variableName = 'ALB_1_1_1'

	Evaluate = 'ALB_1_1_1 = ALB_1_1_1;	% negative values already accounted for in first stage
			    ALB_1_1_1 = 100 * SW_OUT_1_1_1./SW_IN_1_1_1; 
				indBad = find(ALB_1_1_1 < 0 | ALB_1_1_1 >100);ALB_1_1_1(indBad) = NaN;' % see comment in header

	title = 'albedo by CNR4'
	units = '%'
[End]

[Trace]
	variableName = 'PPFD_IN_1_1_1'

	Evaluate = 'PPFD_IN_1_1_1 = calc_avg_trace(clean_tv,PPFD_IN_1_1_1,DSM_PPFD_IN_1_1_1,-1);'

	title = 'incoming PAR'
	units = '\mu mol/m^2/s'
[End]

[Trace]
	variableName = 'PPFD_OUT_1_1_1'

	Evaluate = 'PPFD_OUT_1_1_1=PPFD_OUT_1_1_1;'

	title = 'reflected PAR'
	units = '\mu mol/m^2/s'
[End]

[Trace]
	variableName = 'PPFD_IN_2_1_1'

	Evaluate = 'PPFD_IN_2_1_1 = PPFD_IN_2_1_1;'		

	title = 'incoming PAR measured by BF5'
	units = '\mu mol/m^2/s'
[End]

[Trace]
	variableName = 'PPFD_DIF_1_1_1'

	Evaluate = 'PPFD_DIF_1_1_1 = PPFD_DIF_1_1_1;'

	title = 'diffuse PAR measured by BF5'
	units = '\mu mol/m^2/s'
[End]

[Trace]
	variableName = 'PRI_1_1_1'

	Evaluate = 'PRI_1_1_1 = PRI_1_1_1;'

	title = 'Photochemical reflectance index'
	units = 'nondimensional'
[End]

[Trace]
	variableName = 'NDVI_1_1_1'

	Evaluate = 'NDVI_1_1_1 = NDVI_1_1_1;'

	title = 'Normalized difference vegetation index'
	units = 'nondimensional'
[End]

[Trace]
	variableName = 'PA_1_1_1'

	Evaluate = 'PA_ECCC(ind_delete) = NaN;				
				PA_1_1_1 = calc_avg_trace(clean_tv,PA_1_1_1,PA_ECCC,-1);'

	title = 'air pressure by CS106 installed in the logger box'
	units = 'kPa' 
[End]

[Trace]
	variableName = 'P_1_1_1'

	Evaluate = 'P_ECCC(ind_delete) = NaN;
				P_1_1_1 = calc_avg_trace(clean_tv,P_1_1_1,P_ECCC,-1);'

	title = 'precipitation at 1.05m height'
	units = 'mm' 
[End]

[Trace]
	variableName = 'DO_1_1_1'

	Evaluate = 'DO_1_1_1 = DO_1_1_1;'

	title = 'dissolved oxygen'
	units = 'mg/l'
[End]

[Trace]
	variableName = 'DOperc_1_1_1'

	Evaluate = 'DOperc_1_1_1 = DOperc_1_1_1;'

	title = 'dissolved oxygen ratio'
	units = '% saturation'
[End]

[Trace]
	variableName = 'COND_WATER_1_1_1'

	Evaluate = 'COND_WATER_1_1_1 = COND_WATER_1_1_1;'

	title = 'conductivity of water'
	units = 'microS/cm'
[End]

[Trace]
	variableName = 'Salinity'

	Evaluate = 'Salinity = ((COND_WATER_1_1_1/1000).^1.0878).*0.4665; % unit: g/L, ppt;'

	title = 'Salinity'
	units = 'ppt'
[End]

[Trace]
	variableName = 'WTD_1_1_1'

	Evaluate = 'WTD_1_1_1 = WTD_1_1_1;'

	title = 'water table height'
	units = 'm'
[End]

[Trace]
	variableName = 'ORP_1_1_1'

	Evaluate = 'ORP_1_1_1 = ORP_1_1_1;'

	title = 'oxygen reduction potential'
	units = 'mV'
[End]

[Trace]
	variableName = 'pH_1_1_1'

	Evaluate = 'pH_1_1_1 = pH_1_1_1;'

	title = 'water pH'
	units = 'unitless'
[End]

[Trace]
	variableName = 'TW_1_1_1'

	Evaluate = 'TW_1_1_1 = TW_1_1_1;'

	title = 'water temperature'
	units = '∞C'
[End]

[Trace]
	variableName = 'WS_1_1_1'

	Evaluate = 'WS_ECCC(ind_delete) = NaN;
				WS_1_1_1 = calc_avg_trace(clean_tv,WS_1_1_1,WS_ECCC,-1);'

	title = 'wind speed by RM Young 05103'
	units = 'm/s' 
[End]

[Trace]
	variableName = 'WD_1_1_1'

	Evaluate = 'WD_ECCC(ind_delete) = NaN;
				WD_1_1_1 = calc_avg_trace(clean_tv,WD_1_1_1,WD_ECCC,-1);'

	title = 'wind direction by RM Young 05103'
	units = 'm/s' 
[End]

[Trace]
	variableName = 'WS'

	Evaluate = 'WS = calc_avg_trace(clean_tv,WS,WS_ECCC,-1);'

	title = 'Mean wind speed (CSAT3)'
	units = 'm/s' 
[End]

[Trace]
	variableName = 'wind_dir'

	Evaluate = 'wind_dir = calc_avg_trace(clean_tv,wind_dir,WD_ECCC,-1);'

	title = 'Direction from which the wind blows, with respect to Geographic or Magnetic north'
	units = 'm/s' 
[End]

% ----------------------------------------------------------------------------
% Turbulent fluxes LI-7200 & LI-7700
% ----------------------------------------------------------------------------

[Trace]
	variableName = 'CO2'

	Evaluate = 'CO2 = CO2;'

	title = 'CO2 in mole fraction of wet air'
	units = '\mu mol / mol wet air'
[End]

[Trace]
	variableName = 'H2O'

	Evaluate = 'H2O = H2O;'

	title = 'H2O in mole fraction of wet air'
	units = 'mm mol / mol wet air'
[End]

[Trace]
	variableName = 'CH4'

	Evaluate = 'CH4 = CH4;'

	title = 'CH4 in mole fraction of wet air'
	units = 'nmol / mol wet air'
[End]

[Trace]
	variableName = 'USTAR'

	Evaluate = 'USTAR=USTAR;'

	title = 'Friction Velocity'
	units = 'm/s'
[End]

[Trace]
	variableName = 'w_ts_cov'

	Evaluate = 'w_ts_cov=w_ts_cov;'

	title = 'Covariance of w and sonic temperature (Sonic, after rotation)'
	units = 'm/s degK'
[End]

[Trace]
	variableName = 'w_h2o_cov'

	Evaluate = 'w_h2o_cov=w_h2o_cov;'

	title = 'Covariance of w and water vapour mixing ratio (after rotation)'
	units = 'm/s mmol/mol'
[End]

[Trace]
	variableName = 'w_co2_cov'

	Evaluate = 'w_co2_cov=w_co2_cov;'
	
	title = 'Covariance of w and CO2 (after rotation)'
	units = 'm/s umol/mol'
[End]

[Trace]
	variableName = 'w_ch4_cov'

	Evaluate = 'w_ch4_cov=w_ch4_cov;'

	title = 'Covariance of w and CH4 (after rotation)'
	units = 'm/s nmol/mol'
[End]

[Trace]
	variableName = 'LE'

	Evaluate = 'LE=LE;'

	title = 'Latent Heat Flux'
	units = 'W m^{-2}'
[End]

[Trace]
	variableName = 'SLE'

	Evaluate = 'SLE=SLE;'

	title = 'Estimate of storage latent heat flux'
	units = 'W m^{-2}'
[End]

[Trace]
	variableName = 'H'

	Evaluate = 'H = H;'

	title = 'sensible heat flux'
	units = 'W m^{-2}'
[End]

[Trace]
	variableName = 'SH'

	Evaluate = 'SH = SH;'

	title = 'Estimate of storage sensible heat flux'
	units = 'W m^{-2}'
[End]

[Trace]
	variableName = 'FC'

	Evaluate = 'FC=FC;'
	
	title = 'CO_2 Flux'
	units = '\mu mol m^{-2} s^{-1}'
[End]

[Trace]
	variableName = 'SC'

	Evaluate = 'SC=SC;'

	title = 'Estimate of storage CO2 flux'
	units = 'umol/m^2/s'
[End]

[Trace]
	variableName = 'FCH4'

	Evaluate = 'FCH4=FCH4;'
	
	title = 'CH_4 Flux'
	units = 'nmol m^{-2} s^{-1}'
[End]

[Trace]
	variableName = 'SCH4'

	Evaluate = 'SCH4=SCH4;'
	
	title = 'Estimate of storage CH4 flux'
	units = 'nmol m^{-2} s^{-1}'
[End]

[Trace]
	variableName = 'TKE'

	Evaluate = 'TKE=TKE;'

	title = 'Turbulent kinetic energy'
	units = 'm2 s-2'
[End]

[Trace]
	variableName = 'L'

	Evaluate = 'L = L;'

	title = 'Monin-Obukhov length'
	units = 'm'
[End]

[Trace]
	variableName = 'U_SIGMA'

	Evaluate = 'U_SIGMA = sqrt(u_var);'

	title = 'Standard deviation of velocity fluctuations'
	units = 'm s-1'
[End]

[Trace]
	variableName = 'V_SIGMA'

	Evaluate = 'V_SIGMA = sqrt(v_var);'

	title = 'Standard deviation of lateral velocity fluctuations'
	units = 'm s-1'
[End]

[Trace]
	variableName = 'W_SIGMA'

	Evaluate = 'W_SIGMA = sqrt(w_var);'

	title = 'Standard deviation of vertical velocity fluctuations'
	units = 'm s-1'
[End]

[Trace]
	variableName = 'TAU'

	Evaluate = 'TAU=TAU;'

	title = 'Corrected momentum flux'
	units = 'kg m-1 s-2'
[End]

[Trace]
	variableName = 'zdL'

	Evaluate = 'zdL = zdL;'

	title = 'Monin-Obukhov stability parameter. EddyPro output name: (z-d)/L'
	units = 'dimensionless'
[End]

% ----------------------------------------------------------------------------
% Misc Meteorological variables
% ----------------------------------------------------------------------------


[Trace]
	variableName = 'aerodynamic_resistance_momentum'

	Evaluate = '[ga_m_vel, ga_h_vel] = calc_aerodynamic_conductance(WS_1_1_1,USTAR,zdL);
                    aerodynamic_resistance_momentum = 1./ga_m_vel;'

	title = 'Aerodynamic resistance for momentum'
	units = 's m^{-1}'
[End]

[Trace]
	variableName = 'aerodynamic_resistance_scalar'

	Evaluate = '[ga_m_vel, ga_h_vel] = calc_aerodynamic_conductance(WS_1_1_1,USTAR,zdL);
                    aerodynamic_resistance_scalar = 1./ga_h_vel;'

	title = 'Aerodynamic resistance for heat and water vapour'
	units = 's m^{-1}'
[End]

[Trace]
	variableName = 'surface_conductance'

	Evaluate = 'available_energy = (NETRAD_1_1_1 - G_1); % could better estimate storage terms for G
		    surface_conductance = calc_surface_conductance_as_flx(TA_1_1_1,...
			    RH_1_1_1, aerodynamic_resistance_scalar, available_energy,...
                            LE, PA_1_1_1);'

	title = 'Surface conductance'
	units = 'mol m^{-2} s^{-1}'
[End]

[Trace]
	variableName = 'hpbl'

	Evaluate = 'hpbl = hpbl;'

	title = 'Estimated Height of Planetary Boundary Layer'
	units = 'm/s' 
[End]
